// { "framework": "Vue"} 

/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 34);
/******/ })
/************************************************************************/
/******/ ({

/***/ 34:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(35);


/***/ }),

/***/ 35:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var is_touch_device = function () {\n  return 'ontouchstart' in window // works on most browsers\n      || 'onmsgesturechange' in window; // works on ie10\n};\n\nif(!is_touch_device()) {\n  // Phantom Limb\n  // ------------\n  // http://viewinglens.com/phantom-limb\n  // https://github.com/brian-c/phantom-limb\n  // brian.carstensen@gmail.com\n\n  \"use strict\";\n\n  // Default configuration\n  var config = {\n    style: true,\n    startOnLoad: true\n  };\n\n  // Apply overrides\n  for (var param in window.phantomLimbConfig) {\n    config[param] = window.phantomLimbConfig[param];\n  }\n\n  // Keep track of whether the mouse is down.\n  var mouseIsDown = false;\n\n  // A Finger is a representation on the screen.\n  // It keeps track of its position and the node that it's over.\n  function Finger() {\n    this.node = document.createElement('span');\n    this.node.classList.add('_phantom-limb_finger');\n    this.place();\n  }\n\n  Finger.prototype = {\n    node: null,\n\n    x: NaN,\n    y: NaN,\n\n    target: null,\n\n    place: function() {\n      document.body.appendChild(this.node);\n    },\n\n    hide: function() {\n      this.node.style.display = 'none';\n    },\n\n    show: function() {\n      this.node.style.display = '';\n    },\n\n    move: function(x, y) {\n      if (isNaN(x) || isNaN(y)) {\n        this.hide();\n        this.target = null;\n      } else {\n        this.show();\n\n        this.node.style.left = x + 'px';\n        this.node.style.top = y + 'px';\n\n        this.x = x;\n        this.y = y;\n\n        if (!mouseIsDown) this.target = document.elementFromPoint(x, y);\n      }\n    }\n  };\n\n  // We'll instantiate the fingers when we start.\n  var fingers = [];\n\n  // Create a synthetic event from a real event and a finger.\n  function createMouseEvent(eventName, originalEvent, finger) {\n    var e = document.createEvent('MouseEvent');\n\n    e.initMouseEvent(eventName, true, true,\n      originalEvent.view, originalEvent.detail,\n      finger.x || originalEvent.screenX, finger.y || originalEvent.screenY,\n      finger.x || originalEvent.clientX, finger.y || originalEvent.clientY,\n      originalEvent.ctrlKey, originalEvent.shiftKey,\n      originalEvent.altKey, originalEvent.metaKey,\n      originalEvent.button, finger.target || originalEvent.relatedTarget\n    );\n\n    e.synthetic = true;\n\n    // Set this so we can match shared targets later.\n    e._finger = finger;\n\n    return e;\n  }\n\n  var startDistance = NaN;\n  var startAngle = NaN;\n\n  // Given a mouse event, fire a touch event for each finger.\n  // Add the appropriate touch-specific event properties.\n  function fireTouchEvents(eventName, originalEvent) {\n    // All touch events, including \"touchend\".\n    var events = [];\n    var gestures = [];\n\n    // For each finger with a target, create a touch event.\n    fingers.forEach(function(finger) {\n      if (!finger.target) return;\n\n      // Convert \"ontouch*\" properties and attributes to listeners.\n      var onEventName = 'on' + eventName;\n\n      if (onEventName in finger.target) {\n        console.warn('Converting `' + onEventName + '` property to event listener.', finger.target);\n        finger.target.addEventListener(eventName, finger.target[onEventName], false);\n        delete finger.target[onEventName];\n      }\n\n      if (finger.target.hasAttribute(onEventName)) {\n        console.warn('Converting `' + onEventName + '` attribute to event listener.', finger.target);\n        var handler = new Function('event', finger.target.getAttribute(onEventName));\n        finger.target.addEventListener(eventName, handler, false);\n        finger.target.removeAttribute(onEventName);\n      }\n\n      // Set up a new event with the coordinates of the finger.\n      var touch = createMouseEvent(eventName, originalEvent, finger);\n\n      events.push(touch);\n    });\n\n    // Figure out scale and rotation.\n    if (events.length > 1) {\n      var x = events[0].pageX - events[1].pageX;\n      var y = events[0].pageY - events[1].pageY;\n\n      var distance = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n      var angle = Math.atan2(x, y) * (180 / Math.PI);\n\n      var gestureName = 'gesturechange';\n\n      if (eventName === 'touchstart') {\n        gestureName = 'gesturestart';\n        startDistance = distance;\n        startAngle = angle;\n      }\n\n      if (eventName === 'touchend') gestureName = 'gestureend';\n\n      events.forEach(function(event) {\n        var gesture = createMouseEvent(gestureName, event, event._finger);\n        gestures.push(gesture);\n      });\n\n      events.concat(gestures).forEach(function(event) {\n        event.scale = distance / startDistance;\n        event.rotation = startAngle - angle;\n      });\n    }\n\n    // Loop through the events array and fill in each touch array.\n    events.forEach(function(touch) {\n      touch.touches = events.filter(function(e) {\n        return ~e.type.indexOf('touch') && e.type !== 'touchend';\n      });\n\n      touch.changedTouches = events.filter(function(e) {\n        return ~e.type.indexOf('touch') && e._finger.target === touch._finger.target;\n      });\n\n      touch.targetTouches = touch.changedTouches.filter(function(e) {\n        return ~e.type.indexOf('touch') && e.type !== 'touchend';\n      });\n    });\n\n    // Then fire the events.\n    events.concat(gestures).forEach(function(event, i) {\n      event.identifier = i;\n      event._finger.target.dispatchEvent(event);\n    });\n  }\n\n  // Prevent all mousedown event from doing anything.\n  // We'll fire one manually at touchend.\n  function phantomTouchStart(e) {\n    if (e.synthetic) return;\n\n    mouseIsDown = true;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    fireTouchEvents('touchstart', e);\n  }\n\n  // The center between two fingers\n  var centerX = NaN;\n  var centerY = NaN;\n\n  // Set each finger's position target.\n  // Pressing alt engages the second finger.\n  // Pressing shift locks the second finger's position relative to the first's.\n  function moveFingers(e) {\n    // We'll use this if the second is locked with the first.\n    var changeX = e.clientX - fingers[0].x || 0;\n    var changeY = e.clientY - fingers[0].y || 0;\n\n    // The first finger just follows the mouse.\n    fingers[0].move(e.clientX, e.clientY);\n\n    // TODO: Determine modifier keys independent of mouse movement.\n\n    if (e.altKey) {\n      // Reset the center.\n      if (!centerX && !centerY) {\n        centerX = innerWidth / 2;\n        centerY = innerHeight / 2;\n      }\n\n      // Lock the center with the first finger.\n      if (e.shiftKey) {\n        centerX += changeX;\n        centerY += changeY;\n      }\n\n      var secondX = centerX + (centerX - e.clientX);\n      var secondY = centerY + (centerY - e.clientY);\n\n      fingers[1].move(secondX, secondY);\n    } else {\n      // Disengage the second finger.\n      fingers[1].move(NaN, NaN);\n\n      // Reset the center next time the alt key is held.\n      centerX = NaN;\n      centerY = NaN;\n    }\n  }\n\n  // Prevent all mousemove events from firing.\n  // We'll fire one (and only one) manually at touchend.\n  function phantomTouchMove(e) {\n    if (e.synthetic) return;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    moveFingers(e);\n\n    if (mouseIsDown) {\n      fireTouchEvents('touchmove', e);\n    }\n  }\n\n  // Prevent all mouseup events from firing.\n  // We'll fire one manually at touchend.\n  function phantomTouchEnd(e) {\n    if (e.synthetic) return;\n\n    mouseIsDown = false;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    fireTouchEvents('touchend', e);\n\n    fingers.forEach(function(finger) {\n      if (!finger.target) return;\n\n      // Mobile Safari moves all the mouse event to fire after the touchend event.\n      finger.target.dispatchEvent(createMouseEvent('mouseover', e, finger));\n      finger.target.dispatchEvent(createMouseEvent('mousemove', e, finger));\n      finger.target.dispatchEvent(createMouseEvent('mousedown', e, finger));\n\n      // TODO: These two only fire if content didn't change. How can we tell?\n      finger.target.dispatchEvent(createMouseEvent('mouseup', e, finger));\n      finger.target.dispatchEvent(createMouseEvent('click', e, finger));\n    });\n  }\n\n  // Prevent clicks. We'll handle them manually.\n  function phantomClick(e) {\n    if (e.synthetic) return;\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  // Not entirely proud of this, but I can't serve CSS from GitHub\n  // and I want the bookmarklet to be as simple as possible.\n  var defaultCSS = ([\n    '._phantom-limb,',\n    '._phantom-limb a {',\n      'cursor: none !important;',\n    '}',\n    '._phantom-limb_finger {',\n      'background: rgba(128, 128, 128, 0.5);',\n      'border: 2px solid rgb(128, 128, 128);',\n      'border-radius: 50%;',\n      'display: none;',\n      'height: 44px;',\n      'margin: -22px 0 0 -22px;',\n      'pointer-events: none;',\n      'position: fixed;',\n      'width: 44px;',\n      'z-index: 999999' +\n    '}',\n    '._phantom-limb ._phantom-limb_finger {',\n      'display: block;',\n    '}'\n  ]).join('\\n');\n\n  if (config.style) {\n    var styleTag = document.createElement('style');\n    styleTag.id = '_phantom-limb_default-style';\n    styleTag.innerHTML = defaultCSS;\n    document.querySelector('head').appendChild(styleTag);\n  }\n\n  // On/off switch\n  function start() {\n    if (fingers.length === 0) fingers.push(new Finger(), new Finger());\n\n    document.addEventListener('mousedown', phantomTouchStart, true);\n    document.addEventListener('mousemove', phantomTouchMove, true);\n    document.addEventListener('mouseup', phantomTouchEnd, true);\n    document.addEventListener('click', phantomClick, true);\n\n    document.documentElement.classList.add('_phantom-limb');\n  }\n\n  function stop() {\n    document.removeEventListener('mousedown', phantomTouchStart, true);\n    document.removeEventListener('mousemove', phantomTouchMove, true);\n    document.removeEventListener('mouseup', phantomTouchEnd, true);\n    document.removeEventListener('click', phantomClick, true);\n\n    document.documentElement.classList.remove('_phantom-limb');\n  }\n\n  // Detect keyup, exit when esc.\n  function phantomKeyUp(e) {\n    if (e.keyCode === 27) {\n      if (document.documentElement.classList.contains('_phantom-limb')) {\n        stop();\n      } else {\n        start();\n      }\n    }\n  }\n\n  var phantomLimb = {\n    start: start,\n    stop: stop\n  };\n\n  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (phantomLimb),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  if (true) module.exports = phantomLimb;\n  window.phantomLimb = phantomLimb;\n\n  document.addEventListener('keyup', phantomKeyUp, false);\n\n  if (config.startOnLoad) addEventListener('DOMContentLoaded', start, false);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///35\n");

/***/ })

/******/ });